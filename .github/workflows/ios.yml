name: iOS CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  XCODE_VERSION: '15.0'
  IOS_DESTINATION: 'platform=iOS Simulator,name=iPhone 15,OS=17.0'

jobs:
  lint:
    name: SwiftLint
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install SwiftLint
      run: brew install swiftlint
      
    - name: Run SwiftLint
      run: swiftlint --strict

  test:
    name: Test
    runs-on: macos-latest
    needs: lint
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app
      
    - name: Create Config.plist
      run: |
        cat > "Weather App/Configuration/Config.plist" << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>OpenWeatherAPIKey</key>
            <string>${{ secrets.OPENWEATHER_API_KEY }}</string>
            <key>GooglePlacesAPIKey</key>
            <string>${{ secrets.GOOGLE_PLACES_API_KEY }}</string>
        </dict>
        </plist>
        EOF
    
    - name: Build and Test
      run: |
        xcodebuild clean test \
          -project "Weather App.xcodeproj" \
          -scheme "Weather App" \
          -destination "${{ env.IOS_DESTINATION }}" \
          -resultBundlePath TestResults \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          | xcpretty
          
    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: test-results
        path: TestResults

  code-coverage:
    name: Code Coverage
    runs-on: macos-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app
      
    - name: Create Config.plist
      run: |
        cat > "Weather App/Configuration/Config.plist" << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>OpenWeatherAPIKey</key>
            <string>${{ secrets.OPENWEATHER_API_KEY }}</string>
            <key>GooglePlacesAPIKey</key>
            <string>${{ secrets.GOOGLE_PLACES_API_KEY }}</string>
        </dict>
        </plist>
        EOF
    
    - name: Generate Code Coverage
      run: |
        xcodebuild test \
          -project "Weather App.xcodeproj" \
          -scheme "Weather App" \
          -destination "${{ env.IOS_DESTINATION }}" \
          -enableCodeCoverage YES \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO
          
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Semgrep
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/owasp-top-ten
          
  build:
    name: Build
    runs-on: macos-latest
    needs: [test, security-scan]
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app
      
    - name: Create Config.plist
      run: |
        cat > "Weather App/Configuration/Config.plist" << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>OpenWeatherAPIKey</key>
            <string>${{ secrets.OPENWEATHER_API_KEY }}</string>
            <key>GooglePlacesAPIKey</key>
            <string>${{ secrets.GOOGLE_PLACES_API_KEY }}</string>
        </dict>
        </plist>
        EOF
    
    - name: Build Archive
      run: |
        xcodebuild archive \
          -project "Weather App.xcodeproj" \
          -scheme "Weather App" \
          -configuration Release \
          -archivePath $PWD/build/WeatherApp.xcarchive \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          SKIP_INSTALL=NO
          
    - name: Export Archive
      run: |
        xcodebuild -exportArchive \
          -archivePath $PWD/build/WeatherApp.xcarchive \
          -exportOptionsPlist ExportOptions.plist \
          -exportPath $PWD/build \
          -allowProvisioningUpdates
          
    - name: Upload IPA
      uses: actions/upload-artifact@v3
      with:
        name: weather-app-ipa
        path: build/*.ipa
